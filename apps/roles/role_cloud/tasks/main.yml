##
- name: Check Cloud
  shell: |
    if [ -f "/etc/waagent.conf" ];then echo "azure";fi
    if [ -d "/usr/local/aegis" ];then echo "alicloud";fi
    if [ -f "/snap/bin/amazon-ssm-agent.ssm-cli" ];then echo "aws";fi
    if [ -f "/usr/bin/amazon-ssm-agent" ];then echo "aws";fi
    if [ -d "/CloudrResetPwdAgent" ];then echo "huawei";fi
  register: cloud

- debug:
    msg: "Cloud platform is {{ cloud.stdout}}"

- block:
    - name: Change ubuntu service name
      shell: |
        ln -sf /usr/lib/systemd/system/walinuxagent.service /usr/lib/systemd/system/waagent.service
        systemctl daemon-reload
      when: ansible_os_family == 'Debian'

    - name: ResourceDisk EnableSwap
      lineinfile:
        dest: /etc/waagent.conf
        regexp: "ResourceDisk.Format=n"
        line: "ResourceDisk.Format=y"
        state: present

    - name: ResourceDisk EnableSwap
      lineinfile:
        dest: /etc/waagent.conf
        regexp: "ResourceDisk.EnableSwap=n"
        line: "ResourceDisk.EnableSwap=y"
        state: present

    - name: ResourceDisk SwapSizeMB
      lineinfile:
        dest: /etc/waagent.conf
        regexp: "ResourceDisk.SwapSizeMB=0"
        line: "ResourceDisk.SwapSizeMB=4096"
        state: present

    - name: Restart waagnet
      service:
        name: waagent
        state: restarted
        enabled: yes

  when: cloud.stdout == 'azure'

- block:
    - name: AWS Configure
      apt:
        name: ec2-instance-connect
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: AWS Configure
      yum:
        name: ec2-instance-connect
      when: ansible_os_family == 'RedHat'

    - name: Start ec2-instance-connect
      service:
        name: ec2-instance-connect
        state: started
        enabled: yes
      failed_when: False

  when: cloud.stdout == 'aws'

# install cloud agent
- block:
    - name: Install Aliyun Aqs and aliyun_assist
      shell: |
        wget "https://aegis.alicdn.com/download/install/2.0/linux/AliAqsInstall_64.sh" && chmod +x AliAqsInstall_64.sh && ./AliAqsInstall_64.sh sJmepE
        wget "https://aliyun-client-assist.oss-accelerate.aliyuncs.com/linux/aliyun_assist_latest.rpm"
        rpm -ivh --force aliyun_assist_latest.rpm
        #wget "https://aliyun-client-assist.oss-accelerate.aliyuncs.com/linux/aliyun_assist_latest.deb"
        #dpkg -r aliyun-assist
        systemctl restart aliyun.service
      when: cloud.stdout == 'alicloud'

    - name: Install huawei agent
      shell: curl -s http://169.254.169.254/openstack/latest/meta_data.json | jq .region_id | tr -d '"'
      register: region_id
      when: cloud.stdout == 'huawei'

    - name: Install huawei agent
      shell: curl -k -O 'https://hss-agent.{{region_id.stdout}}.myhuaweicloud.com:10180/package/agent/linux/x86/hostguard.x86_64.deb' && echo 'MASTER_IP=hss-agent.{{region_id.stdout}}.myhuaweicloud.com:10180' > hostguard_setup_config.conf && echo 'SLAVE_IP=hss-agent-slave.{{region_id.stdout}}.myhuaweicloud.com:10180' >> hostguard_setup_config.conf && echo 'ORG_ID=' >> hostguard_setup_config.conf && dpkg -i hostguard.x86_64.deb && rm -f hostguard_setup_config.conf && rm -f hostguard.x86_64.deb
      when: ansible_os_family == "Debian" and cloud.stdout == 'huawei'

    - name: Install huawei agent
      shell: curl -k -O 'https://hss-agent.{{region_id.stdout}}.myhuaweicloud.com:10180/package/agent/linux/x86/hostguard.x86_64.rpm' && echo 'MASTER_IP=hss-agent.{{region_id.stdout}}.myhuaweicloud.com:10180' > hostguard_setup_config.conf && echo 'SLAVE_IP=hss-agent-slave.{{region_id.stdout}}.myhuaweicloud.com:10180' >> hostguard_setup_config.conf && echo 'ORG_ID=' >> hostguard_setup_config.conf && rpm -ivh hostguard.x86_64.rpm && rm -f  hostguard_setup_config.conf && rm -f hostguard.x86_64.rpm
      when: ansible_os_family == "RedHat" and cloud.stdout == 'huawei'

  when: cloud_agent
